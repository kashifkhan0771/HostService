// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kashifkhan0771/HostService/gen/models"
)

// NewAddHostParams creates a new AddHostParams object
// with the default values initialized.
func NewAddHostParams() *AddHostParams {
	var ()
	return &AddHostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddHostParamsWithTimeout creates a new AddHostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddHostParamsWithTimeout(timeout time.Duration) *AddHostParams {
	var ()
	return &AddHostParams{

		timeout: timeout,
	}
}

// NewAddHostParamsWithContext creates a new AddHostParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddHostParamsWithContext(ctx context.Context) *AddHostParams {
	var ()
	return &AddHostParams{

		Context: ctx,
	}
}

// NewAddHostParamsWithHTTPClient creates a new AddHostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddHostParamsWithHTTPClient(client *http.Client) *AddHostParams {
	var ()
	return &AddHostParams{
		HTTPClient: client,
	}
}

/*AddHostParams contains all the parameters to send to the API endpoint
for the add host operation typically these are written to a http.Request
*/
type AddHostParams struct {

	/*Host
	  host's detail

	*/
	Host *models.Host

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add host params
func (o *AddHostParams) WithTimeout(timeout time.Duration) *AddHostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add host params
func (o *AddHostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add host params
func (o *AddHostParams) WithContext(ctx context.Context) *AddHostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add host params
func (o *AddHostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add host params
func (o *AddHostParams) WithHTTPClient(client *http.Client) *AddHostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add host params
func (o *AddHostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHost adds the host to the add host params
func (o *AddHostParams) WithHost(host *models.Host) *AddHostParams {
	o.SetHost(host)
	return o
}

// SetHost adds the host to the add host params
func (o *AddHostParams) SetHost(host *models.Host) {
	o.Host = host
}

// WriteToRequest writes these params to a swagger request
func (o *AddHostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Host != nil {
		if err := r.SetBodyParam(o.Host); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
